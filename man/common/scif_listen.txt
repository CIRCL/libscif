// Copyright 2010-2013 Intel Corporation.
//
// This library is free software; you can redistribute it and/or modify it
// under the terms of the GNU Lesser General Public License as published
// by the Free Software Foundation, version 2.1.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// Disclaimer: The codes contained in these modules may be specific
// to the Intel Software Development Platform codenamed Knights Ferry,
// and the Intel product codenamed Knights Corner, and are not backward
// compatible with other Intel products. Additionally, Intel will NOT
// support the codes or instruction set in future products.
//
// Intel offers no warranty of any kind regarding the code. This code is
// licensed on an "AS IS" basis and Intel is not obligated to provide
// any support, assistance, installation, training, or other services
// of any kind. Intel is also not obligated to provide any updates,
// enhancements or extensions. Intel specifically disclaims any warranty
// of merchantability, non-infringement, fitness for any particular
// purpose, and any other warranty.
//
// Further, Intel disclaims all liability of any kind, including but
// not limited to liability for infringement of any proprietary rights,
// relating to the use of the code, even if Intel is notified of the
// possibility of such liability. Except as expressly stated in an Intel
// license agreement provided with this code and agreed upon with Intel,
// no license, express or implied, by estoppel or otherwise, to any
// intellectual property rights is granted herein.
ifdef::scif_user[SCIF_LISTEN(3)]
ifndef::scif_user[SCIF_LISTEN(9)]
==============
:doctype: manpage

NAME
----
scif_listen - Listen for connections on an endpoint.

SYNOPSIS
--------
*#include <scif.h>*

*int scif_listen(scif_epd_t* 'epd'*, int* 'backlog'*);*

DESCRIPTION
-----------
*scif_listen*() marks the endpoint 'epd' as a listening endpoint - that is, as
an endpoint that will be used to accept incoming connection requests. Once
so marked, the endpoint is said to be in the listening state and may not be
used as the endpoint of a connection.

The endpoint, 'epd', must have been bound to a port.

The 'backlog' argument defines the maximum length to which the queue of
pending connections for 'epd' may grow.  If a connection request arrives when
the queue is full, the client may receive an error with an indication that
the connection was refused.

RETURN VALUE
------------
Upon successful completion, scif_listen() returns 0; otherwise: in user mode
-1 is returned and errno is set to indicate the error; in kernel mode the
negative of one of the following errors is returned.

ERRORS
------
*EBADF*::
 'epd' is not a valid endpoint descriptor.
*EINVAL*::
 'epd' is not a valid endpoint descriptor, or
 the endpoint is not bound to a port.
*EISCONN*::
 The endpoint is already connected or listening.
*ENOTTY*::
 'epd' is not a valid endpoint descriptor.

NOTES
-----
*scif_listen*() is available in both the user mode and kernel mode SCIF libraries.

SEE ALSO
--------
*scif_open*(3), *scif_bind*(3), *scif_connect*(3), *scif_accept*(3), *scif_close*(3), *<scif.h>*

