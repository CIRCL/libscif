// Copyright 2010-2013 Intel Corporation.
//
// This library is free software; you can redistribute it and/or modify it
// under the terms of the GNU Lesser General Public License as published
// by the Free Software Foundation, version 2.1.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// Disclaimer: The codes contained in these modules may be specific
// to the Intel Software Development Platform codenamed Knights Ferry,
// and the Intel product codenamed Knights Corner, and are not backward
// compatible with other Intel products. Additionally, Intel will NOT
// support the codes or instruction set in future products.
//
// Intel offers no warranty of any kind regarding the code. This code is
// licensed on an "AS IS" basis and Intel is not obligated to provide
// any support, assistance, installation, training, or other services
// of any kind. Intel is also not obligated to provide any updates,
// enhancements or extensions. Intel specifically disclaims any warranty
// of merchantability, non-infringement, fitness for any particular
// purpose, and any other warranty.
//
// Further, Intel disclaims all liability of any kind, including but
// not limited to liability for infringement of any proprietary rights,
// relating to the use of the code, even if Intel is notified of the
// possibility of such liability. Except as expressly stated in an Intel
// license agreement provided with this code and agreed upon with Intel,
// no license, express or implied, by estoppel or otherwise, to any
// intellectual property rights is granted herein.
ifdef::scif_user[SCIF_FENCE_WAIT(3)]
ifndef::scif_user[SCIF_FENCE_WAIT(9)]
==================
:doctype: manpage

NAME
----
scif_fence_wait - Wait for completion of marked RMAs.

SYNOPSIS
--------
*#include <scif.h>*

*int scif_fence_wait(scif_epd_t* 'epd'*, int* 'mark'*);*

DESCRIPTION
-----------
*scif_fence_wait*() returns after all RMAs marked with 'mark' have completed.
The value passed in 'mark' must have been obtained in a previous call to
*scif_fence_mark*().

RETURN VALUE
------------
Upon successful completion, *scif_fence_wait*() returns 0; otherwise: in user
mode -1 is returned and errno is set to indicate the error; in kernel mode
the negative of one of the following errors is returned.

ERRORS
------
*EBADF*::
 'epd' is not a valid endpoint descriptor.
*ECONNRESET*::
 A connection was forcibly closed by a peer.
*EINVAL*::
 'epd' is not a valid endpoint descriptor, or
*ENODEV*::
 The remote node is lost.
*ENOTCONN*::
 The endpoint is not connected.
*ENOMEM*::
 Insufficient kernel memory was available.
*ENOTTY*::
 'epd' is not a valid endpoint descriptor.

NOTES
-----
*scif_fence_wait*() is available in both the user mode and kernel mode SCIF libraries.

SEE ALSO
--------
*scif_readfrom*(3), *scif_writeto*(3), *scif_vreadfrom*(3), *scif_vwriteto*(3), *scif_fence_mark*(3), *scif_fence_signal*(3), *<scif.h>*

